package lguproc

func CodeMessage(code string) string {
	errmsg := map[string]string{
		"7000": "초기 입력 상태 (default)",
		"7001": "전송 요청 완료(결과수신대기)",
		"7003": "메시지 형식 오류",
		"7005": "휴대폰번호 가입자 없음(미등록)",
		"7006": "전송 성공",
		"7007": "결번(or 서비스 정지)",
		"7008": "단말기 전원 꺼짐",
		"7009": "단말기 음영지역",
		"7010": "단말기내 수신메시지함 FULL로 전송 실패 (구:단말 Busy, 기타 단말문제)",
		"7011": "기타 전송실패",
		"7013": "스팸차단 발신번호",
		"7014": "스팸차단 수신번호",
		"7015": "스팸차단 메시지내용",
		"7016": "스팸차단 기타",
		"7020": "*단말기 서비스 불가",
		"7021": "단말기 서비스 일시정지",
		"7022": "단말기 착신 거절",
		"7023": "단말기 무응답 및 통화중 (busy)",
		"7028": "단말기 MMS 미지원",
		"7029": "기타 단말기 문제",
		"7036": "유효하지 않은 수신번호(망)",
		"7037": "유효하지 않은 발신번호(망)",
		"7050": "이통사 컨텐츠 에러",
		"7051": "이통사 전화번호 세칙 미준수 발신번호",
		"7052": "이통사 발신번호 변작으로 등록된 발신번호",
		"7053": "이통사 번호도용문자 차단서비스에 가입된 발신번호",
		"7054": "이통사 발신번호 기타",
		"7059": "이통사 기타",
		"7060": "컨텐츠 크기 오류(초과 등)",
		"7061": "잘못된 메시지 타입",
		"7069": "컨텐츠 기타",
		"7074": "[Agent] 중복발송 차단 (동일한 수신번호와 메시지 발송 - 기본off, 설정필요)",
		"7075": "[Agent] 발송 Timeout",
		"7076": "[Agent] 유효하지않은 발신번호",
		"7077": "[Agent] 유효하지않은 수신번호",
		"7078": "[Agent] 컨텐츠 오류 (MMS파일없음 등)",
		"7079": "[Agent] 기타",
		"7080": "고객필터링 차단 (발신번호, 수신번호, 메시지 등)",
		"7081": "080 수신거부",
		"7084": "중복발송 차단",
		"7086": "유효하지 않은 수신번호",
		"7087": "유효하지 않은 발신번호",
		"7088": "발신번호 미등록 차단",
		"7089": "시스템필터링 기타",
		"7090": "발송제한 시간 초과",
		"7092": "잔액부족",
		"7093": "월 발송량 초과",
		"7094": "일 발송량 초과",
		"7095": "초당 발송량 초과 (재전송 필요)",
		"7096": "발송시스템 일시적인 부하 (재전송 필요)",
		"7097": "전송 네트워크 오류 (재전송 필요)",
		"7098": "외부발송시스템 장애 (재전송 필요)",
		"7099": "발송시스템 장애 (재전송 필요)",
	}
	val, ex := errmsg[code]
	if !ex {
		val = "기타 오류"
	}
	return val 
}

func LguCode(code string) string {
	mapTable := map[string]string{
		"01" : "7098",
		"02" : "7011",
		"03" : "7003",
		"04" : "7099",
		"06" : "7006",
		"07" : "7007",
		"08" : "7008",
		"09" : "7009",
		"10" : "7010",
		"11" : "7090",
		"14" : "7059",
		"17" : "7011",
		"18" : "7011",
		"19" : "7093",
		"20" : "7059",
		"21" : "7077",
		"22" : "7036",
		"23" : "7059",
		"24" : "7011",
		"25" : "7011",
		"26" : "7015",
		"27" : "7011",
		"28" : "7088",
		"29" : "7051",
		"30" : "7052",
		"31" : "7053",
		"40" : "7022",
		"50" : "7091",
		"90" : "7079",
		"91" : "7079",
		"92" : "7079",
		"93" : "7079",
		"97" : "7076",
		"99" : "7074",
		"98" : "7090",
		"1000" : "7006",
		"2000" : "7060",
		"2001" : "7007",
		"2002" : "7060",
		"2003" : "7069",
		"3000" : "7028",
		"3001" : "7010",
		"3002" : "7090",
		"3004" : "7008",
		"3005" : "7009",
		"3006" : "7059",
		"4000" : "7098",
		"4001" : "7021",
		"4002" : "7059",
		"4003" : "7059",
		"4104" : "7093",
		"4201" : "7011",
		"5003" : "7015",
		"5201" : "7011",
		"5301" : "7088",
		"5302" : "7051",
		"5303" : "7052",
		"5304" : "7053",
		"5401" : "7091",
		"6000" : "7059",
		"6100" : "7069",
		"9000" : "7079",
		"9001" : "7079",
		"9002" : "7077",
		"9003" : "7079",
		"9004" : "7060",
		"9005" : "7078",
		"9006" : "7078",
		"9007" : "7079",
		"9008" : "7079",
		"9009" : "7074",
		"9010" : "7079",
		"9011" : "7075",
		"9012" : "7079",
		"9017" : "7077",
		"9018" : "7090",
	}
	val, ex := mapTable[code]
	if !ex {
		val = "7011"
	}
	return val
}
